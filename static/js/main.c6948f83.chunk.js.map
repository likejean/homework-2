{"version":3,"sources":["components/header/HeaderMenuItem.js","components/header/HeaderMenu.js","components/header/Toggler.js","components/header/index.js","components/header/Header.js","components/content/LoaderSpinner.js","components/content/Badge.js","components/content/Notification.js","components/content/Content.js","components/content/SubmitButton.js","components/content/NameInput.js","components/content/SearchBar.js","components/content/PlotChart.js","components/content/index.js","components/content/Main.js","components/footer/Source.js","components/footer/index.js","components/footer/Footer.js","App.js","index.js","assets/earth.png"],"names":["props","className","style","color","customColor","href","title","items","map","item","idx","HeaderMenuItem","key","category","undefined","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","Header","src","logo","alt","Toggler","id","HeaderMenu","height","width","timeout","background","quantity","role","notification","date","time","data","total_cases","total_deaths","total_recovered","statistic_taken_at","info","Fragment","Notification","statistic","d","Date","toDateString","toTimeString","DateTime","badge","Badge","target","onClick","submit","placeholder","name","value","search","onChange","change","useState","setStats","searchKeyWord","setKeyWordSearch","nameQuery","setNameQuery","setCountryStats","useEffect","jsonData","decoder","TextDecoder","fetch","then","response","body","getReader","read","done","JSON","parse","decode","console","log","catch","err","NameInput","e","SubmitButton","preventDefault","generateData","firstDate","dataProvider","i","getTime","setDate","push","Math","floor","random","PlotChart","state","timer","this","setState","setInterval","clearInterval","config","React","marginTop","options","Component","Content","totalStats","setTotalStats","countryStats","LoaderSpinner","SearchBar","error","country","source","url","Footer","Source","getFullYear","App","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.c6948f83.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default props => <li className=\"nav-item\">\r\n        <a\r\n            style={{color: props.customColor}}\r\n            className=\"nav-link\"\r\n            href=\"/abs\"\r\n        >{props.title}\r\n            <span className=\"sr-only\">(current)</span>\r\n        </a>\r\n    </li>\r\n","import React from 'react';\r\nimport HeaderMenuItem from \"./HeaderMenuItem\";\r\n\r\nexport default props => {\r\n    const { items } = props;\r\n    return <ul className=\"navbar-nav mr-auto\">\r\n        {items.map((item, idx) => <HeaderMenuItem\r\n            key={idx}\r\n            title={item.category}\r\n            customColor={item.customColor ? item.customColor : undefined}/>\r\n            )\r\n        }\r\n    </ul>\r\n}","import React from \"react\";\r\n\r\nexport default () => <button\r\n        className=\"navbar-toggler\"\r\n        type=\"button\"\r\n        data-toggle=\"collapse\"\r\n        data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\"\r\n        aria-expanded=\"false\"\r\n        aria-label=\"Toggle navigation\"\r\n    >\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>","import Header from './Header';\r\nexport default Header;","import React from 'react';\r\nimport HeaderMenu from './HeaderMenu';\r\nimport Toggler from \"./Toggler\";\r\nimport logo from \"../../assets/earth.png\";\r\n\r\nexport default props => <nav className=\"navbar navbar-expand-lg navbar-dark bg-primary\">\r\n    <img className='logo' src={logo} alt='earth globe'/>\r\n    <Toggler/>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <HeaderMenu items={props.items} />\r\n    </div>\r\n</nav>\r\n","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nexport default props => <Loader type={props.type} color=\"#00BFFF\" height={300} width={300} timeout={3000} />","import React from 'react';\r\n\r\nexport default props => {\r\n    const { item } = props\r\n    return <span className={`badge badge-${item.background}`}>{item.title}: {item.quantity}</span>\r\n}","import React from \"react\";\r\n\r\nexport default props => <div className=\"alert alert-primary\" role=\"alert\">\r\n    {props.notification.date} {props.notification.time}\r\n</div>","import React from 'react';\r\nimport Badge from \"./Badge\";\r\nimport Notification from \"./Notification\";\r\n\r\nexport default props => {\r\n    const {data: { total_cases, total_deaths, total_recovered, statistic_taken_at }} = props;\r\n    const info = [\r\n        {title: 'Coronavirus Cases', quantity: total_cases, background: 'danger'},\r\n        {title: 'Recovered', quantity: total_recovered, background: 'success'},\r\n        {title: 'Deaths', quantity: total_deaths, background: 'secondary'}\r\n    ];\r\n    const DateTime = statistic => {\r\n        let d = new Date(statistic);\r\n        return {date: d.toDateString(), time: d.toTimeString()};\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Notification notification={DateTime(statistic_taken_at)}/>\r\n            {info.map((badge, idx) => <Badge key={idx} item={badge} className=\"p-4\"/>)}\r\n        </React.Fragment>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default props => <div className=\"container\">\r\n    <button type=\"submit\"\r\n            className=\"pinkBg btns\" target=\"_blank\" onClick={props.submit}\r\n    >\r\n        <span className=\"ripple pinkBg\"></span>\r\n        <span className=\"ripple pinkBg\"></span>\r\n        <span className=\"ripple pinkBg\"></span>\r\n    </button>\r\n</div>","import React from 'react';\r\nexport default props => <div className=\"d-flex justify-content-center h-100\">\r\n    <div className=\"searchbar\">\r\n        <input\r\n            className=\"search_input\"\r\n            type=\"text\"\r\n            placeholder=\"Search By Country...\"\r\n            name=\"countryName\"\r\n            value={props.search}\r\n            onChange={props.change}\r\n        />\r\n        <button className=\"search_icon\"><i className=\"fas fa-search\"></i></button>\r\n    </div>\r\n</div>","import React, {useEffect, useState } from 'react';\r\nimport SubmitButton from \"./SubmitButton\";\r\nimport NameInput from \"./NameInput\";\r\n\r\nexport default props => {\r\n    const [stats, setStats] = useState(null);\r\n    const [searchKeyWord, setKeyWordSearch] = useState(\"\");\r\n    const [nameQuery, setNameQuery] = useState(\"\");\r\n\r\n\r\n\r\n    const { setCountryStats } = props;\r\n\r\n    useEffect(() => {\r\n        ///!!!TO TRANSFORM BYTES INTO CHARACTERS... https://flaviocopes.com/stream-api/\r\n        const decoder = new TextDecoder('utf-8');\r\n        let jsonData;\r\n        const getData = () => {\r\n            fetch(`https://coronavirus-monitor.p.rapidapi.com/coronavirus/cases_by_particular_country.php?country=${nameQuery}`, {\r\n                \"method\": \"GET\",\r\n                \"headers\": {\r\n                    \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n                    \"x-rapidapi-key\": \"a44cc5419amsh8091029d3dfe288p1e59c3jsna3190f081f0e\"\r\n                }\r\n            })\r\n            .then(response => {\r\n                response.body\r\n                .getReader()\r\n                .read()\r\n                .then(({value, done}) => {\r\n                    jsonData = JSON.parse(decoder.decode(value));\r\n                    setStats(jsonData);\r\n                    console.log(jsonData)\r\n                    setCountryStats(jsonData);\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            });\r\n        }\r\n        getData();\r\n    },[nameQuery]);\r\n\r\n\r\n    const inputChange = e => setKeyWordSearch(e.target.value);\r\n    const getSearch = e => {\r\n        e.preventDefault()\r\n        setNameQuery(searchKeyWord);\r\n    }\r\n\r\n\r\n    return <div className=\"container h-100\">\r\n\r\n        <NameInput search={searchKeyWord} change={inputChange}/>\r\n        <SubmitButton submit={getSearch}/>\r\n    </div>\r\n}\r\n","import React, {Component} from 'react';\r\nimport AmCharts from \"@amcharts/amcharts3-react\";\r\n// Generate random data\r\n\r\nfunction generateData() {\r\n    const firstDate = new Date();\r\n\r\n    const dataProvider = [];\r\n\r\n    for (let i = 0; i < 100; ++i) {\r\n        const date = new Date(firstDate.getTime());\r\n\r\n        date.setDate(i);\r\n\r\n        dataProvider.push({\r\n            date: date,\r\n            value: Math.floor(Math.random() * 100)\r\n        });\r\n    }\r\n\r\n    return dataProvider;\r\n}\r\n\r\n\r\n// Component which contains the dynamic state for the chart\r\nclass PlotChart extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        console.log('DATA',props);\r\n        this.state = {\r\n            data: props.data,\r\n            dataProvider: generateData(),\r\n            timer: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({\r\n            // Update the chart dataProvider every 3 seconds\r\n            timer: setInterval(() => {\r\n                this.setState({\r\n                    dataProvider: generateData()\r\n                });\r\n            }, 3000)\r\n        });\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.timer);\r\n    }\r\n\r\n    render() {\r\n        const config = {\r\n            \"type\": \"serial\",\r\n            \"theme\": \"light\",\r\n            \"marginRight\": 40,\r\n            \"marginLeft\": 40,\r\n            \"autoMarginOffset\": 20,\r\n            \"mouseWheelZoomEnabled\": true,\r\n            \"valueAxes\": [{\r\n                \"id\": \"v1\",\r\n                \"axisAlpha\": 0,\r\n                \"position\": \"left\",\r\n                \"ignoreAxisWidth\": true\r\n            }],\r\n            \"balloon\": {\r\n                \"borderThickness\": 1,\r\n                \"shadowAlpha\": 0\r\n            },\r\n            \"graphs\": [{\r\n                \"id\": \"g1\",\r\n                \"balloon\":{\r\n                    \"drop\": true,\r\n                    \"adjustBorderColor\": false,\r\n                    \"color\":\"#ff2423\"\r\n                },\r\n                \"bullet\": \"round\",\r\n                \"bulletBorderAlpha\": 1,\r\n                \"bulletColor\": \"#FFFFFF\",\r\n                \"bulletSize\": 5,\r\n                \"hideBulletsCount\": 50,\r\n                \"lineThickness\": 2,\r\n                \"title\": \"red line\",\r\n                \"useLineColorForBulletBorder\": true,\r\n                \"valueField\": \"value\",\r\n                \"balloonText\": \"<span style='font-size:18px;'>[[value]]</span>\"\r\n            }],\r\n            \"chartScrollbar\": {\r\n                \"graph\": \"g1\",\r\n                \"oppositeAxis\": false,\r\n                \"offset\":30,\r\n                \"scrollbarHeight\": 80,\r\n                \"backgroundAlpha\": 0,\r\n                \"selectedBackgroundAlpha\": 0.5,\r\n                \"selectedBackgroundColor\": \"#79c0fd\",\r\n                \"graphFillAlpha\": 0,\r\n                \"graphLineAlpha\": 0.5,\r\n                \"selectedGraphFillAlpha\": 0,\r\n                \"selectedGraphLineAlpha\": 1,\r\n                \"autoGridCount\": true,\r\n                \"color\":\"#aa2663\"\r\n            },\r\n            \"chartCursor\": {\r\n                \"pan\": true,\r\n                \"valueLineEnabled\": true,\r\n                \"valueLineBalloonEnabled\": true,\r\n                \"cursorAlpha\":1,\r\n                \"cursorColor\":\"#258cbb\",\r\n                \"limitToGraph\":\"g1\",\r\n                \"valueLineAlpha\":0.2,\r\n                \"valueZoomable\": true\r\n            },\r\n            \"valueScrollbar\":{\r\n                \"oppositeAxis\": false,\r\n                \"offset\":50,\r\n                \"scrollbarHeight\":10\r\n            },\r\n            \"categoryField\": \"date\",\r\n            \"categoryAxis\": {\r\n                \"parseDates\": true,\r\n                \"dashLength\": 1,\r\n                \"minorGridEnabled\": true\r\n            },\r\n            \"dataProvider\": this.state.dataProvider\r\n        };\r\n\r\n        return (\r\n            <div className=\"App\">\r\n                <AmCharts.React style={{ width: \"100%\", height: \"500px\", marginTop: \"50px\" }} options={config} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PlotChart;","import Content from './Main';\r\nexport default Content;","import React, {useEffect, useState} from 'react';\r\nimport LoaderSpinner from \"./LoaderSpinner\";\r\nimport Content from \"./Content\";\r\nimport SearchBar from \"./SearchBar\";\r\nimport PlotChart from \"./PlotChart\";\r\n\r\n\r\nexport default () => {\r\n    const [totalStats, setTotalStats] = useState(null);\r\n    const [countryStats, setCountryStats] = useState(null);\r\n    useEffect(() => {\r\n        ///!!!TO TRANSFORM BYTES INTO CHARACTERS... https://flaviocopes.com/stream-api/\r\n        const decoder = new TextDecoder('utf-8');\r\n        let jsonData;\r\n        fetch(\"https://coronavirus-monitor.p.rapidapi.com/coronavirus/worldstat.php\", {\r\n            \"method\": \"GET\",\r\n            \"headers\": {\r\n                \"x-rapidapi-host\": \"coronavirus-monitor.p.rapidapi.com\",\r\n                \"x-rapidapi-key\": \"a44cc5419amsh8091029d3dfe288p1e59c3jsna3190f081f0e\"\r\n            }\r\n        })\r\n        .then(response => {\r\n            response.body\r\n                .getReader()\r\n                .read()\r\n                .then(({value, done}) => {\r\n                    jsonData = JSON.parse(decoder.decode(value));\r\n                    setTotalStats(jsonData);\r\n                })\r\n            })\r\n        .catch(err => {\r\n            console.log(err);\r\n        });\r\n    },[]);\r\n\r\n    const plot = data => <React.Fragment>\r\n        <p>{data.country}</p>\r\n        <PlotChart data={data}/>\r\n    </React.Fragment>\r\n    console.log(\"countryStats\",countryStats)\r\n    return (\r\n        <React.Fragment>\r\n            <div className='main-container'>\r\n                {totalStats === null ? <LoaderSpinner type={\"BallTriangle\"}/> : <Content data={totalStats}/>}\r\n                <SearchBar setCountryStats={setCountryStats}/>\r\n            </div>\r\n            <h1>{countryStats === null || countryStats.error ? <p>Search Country by Name</p> : plot(countryStats)}</h1>\r\n        </React.Fragment>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default props => {\r\n    const { source } = props;\r\n    return <a href={source.url}>{source.name}</a>\r\n}\r\n\r\n","import Footer from './Footer';\r\nexport default Footer;","import React from 'react';\r\nimport Source from \"./Source\";\r\nexport default props => (\r\n    <footer className=\"footer\">\r\n        <h2>Source Links</h2>\r\n        <ul>\r\n            {props.items.map((source, idx) => <li className='footer-link' key={idx} ><Source source={source} /></li>)}\r\n        </ul>\r\n        <div className='copyrights'>\r\n            &copy; {new Date().getFullYear()} Copyright: <a href=\"https://www.mdbootstrap.com\"> PASV </a>\r\n        </div>\r\n    </footer>\r\n);","import React from 'react';\nimport './App.css';\nimport Header from './components/header';\nimport Main from \"./components/content\";\nimport Footer from './components/footer';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nfunction App() {\n\n    const HeaderMenuItems = [\n        {category: 'Home', customColor: null },\n        {category: 'Population', customColor: null },\n        {category: 'Economies', customColor: null },\n        {category: 'Coronavirus', customColor: 'red' }\n    ];\n    const FooterMenuItems = [\n        {name: 'Centers for Disease Control and Prevention', url: 'https://www.cdc.gov/coronavirus/2019-nCoV/index.html'},\n        {name: 'Worldometer', url: 'https://www.worldometers.info/coronavirus/'},\n        {name: 'WHO', url: 'https://www.who.int/emergencies/diseases/novel-coronavirus-2019'}\n    ];\n    return (\n        <div className=\"App\">\n            <Header items={HeaderMenuItems}/>\n            <Main/>\n            <Footer items={FooterMenuItems}/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));","module.exports = __webpack_public_path__ + \"static/media/earth.9f08a9dc.png\";"],"sourceRoot":""}